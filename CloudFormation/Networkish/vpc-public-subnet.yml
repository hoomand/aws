---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    The template to create a VPC with a public subnet

# Parameters used across the template
Parameters:
  VPCName:
    Type: String
    Default: "MyVPC"
  VPCCIDR:
    Type: String
    Description: "VPC CIDR (X.X.0.0/16)"
    Default: "10.0.0.0/16"
  SUBNETCIDR:
    Type: String
    Description: "Subnet CIDR (X.X.0.0/16)"
    Default: "10.0.1.0/24"

# Resource definitions
Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: "Name"
          Value: !Ref VPCName

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SUBNETCIDR
      MapPublicIpOnLaunch: "true"
      AvailabilityZone:
        Fn::Select:
          - '0'
          - Fn::GetAZs:
              Ref: AWS::Region
      Tags:
        - Key: "Name"
          Value: !Ref VPCName

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Ref VPCName

  # Attaching InternetGateway to our VPC
  GatewayToInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Ref VPCName

  # Assign a public route (0.0.0.0/0) to our route table above
  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  # Associating our public route table to our subnet
  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable


  # Creating network ACLs
  PublicNetworkAcl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Ref VPCName

  InboundAllPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: "allow"
      Egress: "false"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: '0'
        To: '65535'

  OutboundAllPublicNetworkAclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: "allow"
      Egress: "true"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: '0'
        To: '65535'

  PublicSubnetNetworkAclAssocation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      NetworkAclId: !Ref PublicNetworkAcl


# Outputs section
Outputs:
  VpcId:
    Description: "VPC"
    Value: !Ref VPC
  PublicSubnet:
    Description: Public subnet
    Value: !Ref PublicSubnet
  AZ:
    Description: Availability zone
    Value: !GetAtt PublicSubnet.AvailabilityZone
